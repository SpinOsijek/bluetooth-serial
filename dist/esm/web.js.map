{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,sDAAsD;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,kBACX,SAAQ,SAAS;IAEjB,OAAO,CAAC,QAA8B;QACpC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,eAAe,CAAC,QAA8B;QAC5C,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,UAAU;QACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,IAAI;QACF,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,QAA2B;QAC/B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,SAAS;QACP,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,SAAS;QACP,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,WAAW;QACT,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK;QACH,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,MAAM;QACJ,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,QAAQ;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,IAAI;QACF,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,gBAAgB;QACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,eAAe;QACb,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,gBAAgB;QACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,kBAAkB,CAAC,QAAyC;QAC1D,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;CACF","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { WebPlugin } from '@capacitor/core';\r\n\r\nimport type { BluetoothSerialPlugin, devices, permissions, PermissionStatus } from './definitions';\r\n\r\nexport class BluetoothSerialWeb\r\n  extends WebPlugin\r\n  implements BluetoothSerialPlugin {\r\n  connect(_options: { address: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  connectInsecure(_options: { address: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  disconnect(): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  read(): Promise<{ data: string; }> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  write(_options: { data: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  available(): Promise<{ available: number }> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  isEnabled(): Promise<{ isEnabled: boolean }> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  isConnected(): Promise<{ isConnected: boolean }> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  clear(): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  enable(): Promise<{ isEnabled: boolean; }> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  settings(): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  list(): Promise<devices> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  discoverUnpaired(): Promise<devices> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  cancelDiscovery(): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  checkPermissions(): Promise<PermissionStatus[]> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  requestPermissions(_options: { permissions: permissions[]; }): Promise<PermissionStatus[]> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async echo(options: { value: string }): Promise<{ value: string }> {\r\n    console.log('ECHO', options);\r\n    return options;\r\n  }\r\n}\r\n"]}